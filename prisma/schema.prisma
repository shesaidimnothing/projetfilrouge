// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int             @id @default(autoincrement())
  email           String          @unique
  password        String
  name            String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  ads             Ad[]
  responses       Response[]
  sentMessages    PrivateMessage[] @relation("SentMessages")
  receivedMessages PrivateMessage[] @relation("ReceivedMessages")
}

model Ad {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  price       Float
  category    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  responses   Response[]
  imageUrl    String?  // Champ optionnel pour stocker l'URL de l'image
}

model Response {
  id        Int      @id @default(autoincrement())
  message   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  ad        Ad       @relation(fields: [adId], references: [id])
  adId      Int
  createdAt DateTime @default(now())
}

model PrivateMessage {
  id          Int      @id @default(autoincrement())
  content     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  read        Boolean  @default(false)
  status      String   @default("sent") // "sent", "delivered", "read"
  senderId    Int
  receiverId  Int
  sender      User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver    User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
}
